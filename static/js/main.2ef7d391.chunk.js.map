{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","generateEmail","state","email","generateEmailBody","emailBody","politician","name","city","encodeURIComponent","key","handleName","bind","handleRep","handleCity","handleState","handleEmail","event","this","setState","target","value","className","style","marginLeft","marginRight","fontWeight","fontSize","backgroundColor","color","borderRadius","padding","href","margin","type","onChange","marginTop","textAlign","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2ef7d391.chunk.js","sourcesContent":["import * as React from 'react';\nimport './App.css';\n\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      key: 'AIzaSyA9utUmfmdUWML-N4RuMHBRt4nbi7Hohv4',\n      name: '________',\n      politician: '________',\n      city: '________',\n      state: '________',\n      email: '',\n    };\n\n    this.handleName = this.handleName.bind(this);\n    this.handleRep = this.handleRep.bind(this);\n    this.handleCity = this.handleCity.bind(this);\n    this.handleState = this.handleState.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n  }\n\n  handleRep(event) {\n    this.setState({politician: event.target.value})\n  }\n\n  handleName(event) {\n    this.setState({name: event.target.value})\n  }\n\n  handleCity(event) {\n    this.setState({city: event.target.value})\n  }\n\n  handleState(event) {\n    this.setState({state: event.target.value})\n  }\n\n  handleEmail(event) {\n    this.setState({email: event.target.value})\n  }\n\n  generateEmail = () => {\n    var email = \"mailto:\"+ (this.state.email) + \"?subject=End Police Killing&body=\" + this.generateEmailBody();\n    return email;\n  }\n\n  generateEmailBody = () => {\n    var emailBody = (\"Dear \"+ this.state.politician + \"\\n\\nMy name is \" + this.state.name);\n    emailBody+=(\" and I live in \" + this.state.city + \", \" + this.state.state + \".\");\n    emailBody+=(\"\\nAs you well know, the deaths of George Floyd and Breonna Taylor have sparked outrage and rioting across the country.  Unequal treatment at the hands of local police has been an issue in the black community since this country was founded.\");\n    emailBody+=(\"\\n\\nThis must end now.  To end this cycle, I would like to demand the following eight policies be put in place for every police station within your jurisdiction.\");\n    emailBody+=(\"\\n\\n1 – Ban chokeholds and strangleholds.\");\n    emailBody+=(\"\\n2 – Require officers to de-escalate situations through communications to prevent the need to use force.\");\n    emailBody+=(\"\\n3 – Require officers to give a verbal warning in all situations before using deadly force and shooting.\");\n    emailBody+=(\"\\n4 – Require officers to exhaust all other alternatives that use no or less lethal force before resorting to deadly force.\");\n    emailBody+=(\"\\n5 – Expect and require officers to intervene in the use of excessive force by a fellow officer and report these incidents to a supervisor immediately.\");\n    emailBody+=(\"\\n6 – Ban shooting at moving vehicles entirely.  This practice has been shown to be particularly ineffective and dangerous.\");\n    emailBody+=(\"\\n7 – Establish a Force Continuum that only allows severe use of force to extreme situations, develop clear policy restrictions on the use of all policing tactics, and educate every officer on those policies.\");\n    emailBody+=(\"\\n8 – Require officers to report every time they threaten, point a firearm at, or use force against citizens.\");\n    emailBody+=(\"\\n\\nThese policies are taken from Campaign Zero’s #8CantWait project to decrease police killings.  More information can be found at https://8cantwait.org/.\");\n    emailBody+=(\"\\n\\nThank you for your time.\\nSincerely,\\n\" + this.state.name);\n    emailBody = encodeURIComponent(emailBody);\n    return emailBody;\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p style ={{marginLeft: 10, marginRight: 10, fontWeight: '600', fontSize: 25}}>\n            SEND EMAILS TO YOUR LOCAL LAWMAKERS TO <br /> DEMAND CHANGE TO THE POLICING SYSTEM: \n          </p>\n  \n          <p style ={{marginLeft: 10, marginRight: 10}}>\n            Step 1: Find and copy the email of your local representative(s) from MyReps.\n          </p>\n          <p style={{backgroundColor: 'white', color: 'blue', fontWeight: '700', fontSize: 20, marginRight: 20, marginLeft: 20, borderRadius: 20, padding: 15}}>\n            <a href='//myreps.datamade.us/'>Find Your Representatives</a>\n          </p>\n\n          <p style ={{marginLeft: 10, marginRight: 10}}>\n            Step 2: Fill in the blanks to automatically generate an email.\n          </p>\n\n          <form>\n            <label style = {{margin: 10}}>\n              Your Name:\n              <input style={{borderRadius: 5, margin: 5, fontSize: 20}} type=\"text\" name=\"name\" onChange={this.handleName} />\n            </label>\n            <label style = {{margin: 10}}>\n              City:\n              <input style={{borderRadius: 5, margin: 5, fontSize: 20}} type=\"text\" name=\"city\" onChange={this.handleCity} />\n            </label>\n            <label style = {{margin: 10}}>\n              State:\n              <input style={{borderRadius: 5, margin: 5, fontSize: 20}} type=\"text\" name=\"state\" onChange={this.handleState} />\n            </label>\n          </form>\n\n          <form>\n          <label style = {{margin: 10}}>\n              Representative:\n              <input style={{borderRadius: 5, margin: 5, fontSize: 20}} type=\"text\" name=\"rep\" onChange={this.handleRep} />\n            </label>\n            <label style = {{margin: 10}}>\n              Representative Email:\n              <input style={{borderRadius: 5, margin: 5, fontSize: 20}} type=\"text\" name=\"email\" onChange={this.handleEmail} />\n            </label>\n          </form>\n\n\n          <p style ={{marginLeft: 10, marginRight: 10}}>\n            Step 3: Send the preloaded email.  If it doesn't load after a few moments, just copy and paste the below message.\n          </p>\n          <p style={{backgroundColor: 'white', color: 'black', fontWeight: '800', fontSize: 20, marginRight: 20, marginLeft: 20, borderRadius: 20, padding: 15}}>\n            <a href={this.generateEmail()}>Send Preloaded Email</a>\n          </p>\n\n          <p style={{backgroundColor: '#d9d9d9', color: 'black', marginRight: 25, marginTop: 20, fontSize: 15, marginLeft: 25, borderRadius: 10, padding: 15, textAlign: 'start'}}>\n          Dear {this.state.politician},\n          <br />\n          <br />My name is {this.state.name} and I live in {this.state.city}, {this.state.state}.  As you well know, the deaths of George Floyd and Breonna Taylor have sparked outrage and rioting across the country.  Unequal treatment at the hands of local police has been an issue in the black community since this country was founded.  \n          <br />\n          <br />This must end now.  To end this cycle, I would like to demand the following eight policies be put in place for every police station within your jurisdiction.\n          <br />\n          <br />1 – Ban chokeholds and strangleholds.\n          <br />2 – Require officers to de-escalate situations through communications to prevent the need to use force.  \n          <br />3 – Require officers to give a verbal warning in all situations before using deadly force and shooting.\n          <br />4 – Require officers to exhaust all other alternatives that use no or less lethal force before resorting to deadly force.\n          <br />5 – Expect and require officers to intervene in the use of excessive force by a fellow officer and report these incidents to a supervisor immediately.\n          <br />6 – Ban shooting at moving vehicles entirely.  This practice has been shown to be particularly ineffective and dangerous.\n          <br />7 – Establish a Force Continuum that only allows severe use of force to extreme situations, develop clear policy restrictions on the use of all policing tactics, and educate every officer on those policies.\n          <br />8 – Require officers to report every time they threaten, point a firearm at, or use force against citizens.\n          <br />\n          <br />These policies are taken from Campaign Zero’s #8CantWait project to decrease police killings.  More information can be found at <a href='https://8cantwait.org/'>8cantwait.org</a>.\n          <br />\n          <br />Thank you for your time.\n          <br />Sincerely,\n          <br />{this.state.name}\n\n          </p>\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}